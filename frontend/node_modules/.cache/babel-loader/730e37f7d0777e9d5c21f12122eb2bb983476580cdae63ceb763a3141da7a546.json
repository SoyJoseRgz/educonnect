{"ast":null,"code":"var _jsxFileName = \"/home/joserodriguez/educonnect/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';\nimport { authApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    isLoading: true,\n    error: null\n  });\n  const checkAuthStatus = useCallback(async () => {\n    try {\n      await authApi.getCurrentAdmin();\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      }));\n    } catch (error) {\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      }));\n    }\n  }, []);\n\n  // Check authentication status on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n  const login = useCallback(async (email, password) => {\n    setAuthState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      await authApi.login({\n        email,\n        password\n      });\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      }));\n    } catch (error) {\n      const apiError = error;\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: false,\n        isLoading: false,\n        error: apiError.status === 401 ? 'Credenciales incorrectas. Verifica tu correo y contrase침a.' : apiError.message || 'Error al iniciar sesi칩n. Intenta nuevamente.'\n      }));\n      throw error; // Re-throw to allow component-level handling\n    }\n  }, []);\n  const logout = useCallback(async () => {\n    setAuthState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null\n    }));\n    try {\n      await authApi.logout();\n    } catch (error) {\n      // Even if logout fails on server, clear local state\n      console.warn('Logout request failed:', error);\n    } finally {\n      setAuthState({\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      });\n    }\n  }, []);\n  const clearError = useCallback(() => {\n    setAuthState(prev => ({\n      ...prev,\n      error: null\n    }));\n  }, []);\n  const contextValue = useMemo(() => ({\n    ...authState,\n    login,\n    logout,\n    clearError\n  }), [authState, login, logout, clearError]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"zoCHfWBI02j8MQlQJTsSQNidCag=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","useMemo","authApi","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","authState","setAuthState","isAuthenticated","isLoading","error","checkAuthStatus","getCurrentAdmin","prev","login","email","password","apiError","status","message","logout","console","warn","clearError","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/joserodriguez/educonnect/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode, useCallback, useMemo } from 'react';\nimport { authApi, ApiError } from '../services/api';\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\ninterface AuthContextType extends AuthState {\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  clearError: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [authState, setAuthState] = useState<AuthState>({\n    isAuthenticated: false,\n    isLoading: true,\n    error: null,\n  });\n\n  const checkAuthStatus = useCallback(async () => {\n    try {\n      await authApi.getCurrentAdmin();\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      }));\n    } catch (error) {\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      }));\n    }\n  }, []);\n\n  // Check authentication status on mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  const login = useCallback(async (email: string, password: string): Promise<void> => {\n    setAuthState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null,\n    }));\n\n    try {\n      await authApi.login({ email, password });\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      }));\n    } catch (error) {\n      const apiError = error as ApiError;\n      setAuthState(prev => ({\n        ...prev,\n        isAuthenticated: false,\n        isLoading: false,\n        error: apiError.status === 401\n          ? 'Credenciales incorrectas. Verifica tu correo y contrase침a.'\n          : apiError.message || 'Error al iniciar sesi칩n. Intenta nuevamente.',\n      }));\n      throw error; // Re-throw to allow component-level handling\n    }\n  }, []);\n\n  const logout = useCallback(async (): Promise<void> => {\n    setAuthState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: null,\n    }));\n\n    try {\n      await authApi.logout();\n    } catch (error) {\n      // Even if logout fails on server, clear local state\n      console.warn('Logout request failed:', error);\n    } finally {\n      setAuthState({\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      });\n    }\n  }, []);\n\n  const clearError = useCallback(() => {\n    setAuthState(prev => ({\n      ...prev,\n      error: null,\n    }));\n  }, []);\n\n  const contextValue: AuthContextType = useMemo(() => ({\n    ...authState,\n    login,\n    logout,\n    clearError,\n  }), [authState, login, logout, clearError]);\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}